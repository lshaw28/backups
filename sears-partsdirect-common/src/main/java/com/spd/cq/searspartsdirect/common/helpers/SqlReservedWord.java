package com.spd.cq.searspartsdirect.common.helpers;

import java.util.HashSet;
import java.util.Set;

/**
 * @author dmartinez Enum listing all ANSI SQL 2003 SQL reserved words
 */

public class SqlReservedWord {

	private final static Set<String> words = initWords();

	private final static Set<String> initWords() {
		Set<String> words = new HashSet<String>();

		words.add("ADD");
		words.add("ALL");
		words.add("ALLOCATE");
		words.add("ALTER");
		words.add("AND");
		words.add("ANY");
		words.add("ARE");
		words.add("ARRAY");
		words.add("AS");
		words.add("ASENSITIVE");
		words.add("ASYMMETRIC");
		words.add("AT");
		words.add("ATOMIC");
		words.add("AUTHORIZATION");
		words.add("BEGIN");
		words.add("BETWEEN");
		words.add("BIGINT");
		words.add("BINARY");
		words.add("BLOB");
		words.add("BOOLEAN");
		words.add("BOTH");
		words.add("BY");
		words.add("CALL");
		words.add("CALLED");
		words.add("CASCADED");
		words.add("CASE");
		words.add("CAST");
		words.add("CHAR");
		words.add("CHARACTER");
		words.add("CHECK");
		words.add("CLOB");
		words.add("CLOSE");
		words.add("COLLATE");
		words.add("COLUMN");
		words.add("COMMIT");
		words.add("CONDITION");
		words.add("CONNECT");
		words.add("CONSTRAINT");
		words.add("CONTINUE");
		words.add("CORRESPONDING");
		words.add("CREATE");
		words.add("CROSS");
		words.add("CUBE");
		words.add("CURRENT");
		words.add("CURRENT");
		words.add("DATE");
		words.add("CURRENT");
		words.add("DEFAULT");
		words.add("TRANSFORM");
		words.add("GROUP");
		words.add("CURRENT");
		words.add("PATH");
		words.add("CURRENT");
		words.add("ROLE");
		words.add("CURRENT");
		words.add("TIME");
		words.add("CURRENT");
		words.add("TIMESTAMP");
		words.add("CURRENT");
		words.add("TRANSFORM");
		words.add("GROUP");
		words.add("FOR");
		words.add("TYPE");
		words.add("CURRENT");
		words.add("USER");
		words.add("CURSOR");
		words.add("CYCLE");
		words.add("DATE");
		words.add("DAY");
		words.add("DEALLOCATE");
		words.add("DEC");
		words.add("DECIMAL");
		words.add("DECLARE");
		words.add("DEFAULT");
		words.add("DELETE");
		words.add("DEREF");
		words.add("DESCRIBE");
		words.add("DETERMINISTIC");
		words.add("DISCONNECT");
		words.add("DISTINCT");
		words.add("DO");
		words.add("DOUBLE");
		words.add("DROP");
		words.add("DYNAMIC");
		words.add("EACH");
		words.add("ELEMENT");
		words.add("ELSE");
		words.add("ELSEIF");
		words.add("END");
		words.add("ESCAPE");
		words.add("EXCEPT");
		words.add("EXEC");
		words.add("EXECUTE");
		words.add("EXISTS");
		words.add("EXIT");
		words.add("EXTERNAL");
		words.add("FETCH");
		words.add("FILTER");
		words.add("FLOAT");
		words.add("FOR");
		words.add("FOREIGN");
		words.add("FREE");
		words.add("FROM");
		words.add("FULL");
		words.add("FUNCTION");
		words.add("GET");
		words.add("GLOBAL");
		words.add("GRANT");
		words.add("GROUP");
		words.add("GROUPING");
		words.add("HANDLER");
		words.add("HAVING");
		words.add("HOLD");
		words.add("HOUR");
		words.add("IDENTITY");
		words.add("IF");
		words.add("IMMEDIATE");
		words.add("IN");
		words.add("INDICATOR");
		words.add("INNER");
		words.add("INOUT");
		words.add("INPUT");
		words.add("INSENSITIVE");
		words.add("INSERT");
		words.add("INT");
		words.add("INTEGER");
		words.add("INTERSECT");
		words.add("INTERVAL");
		words.add("INTO");
		words.add("IS");
		words.add("ITERATE");
		words.add("JOIN");
		words.add("LANGUAGE");
		words.add("LARGE");
		words.add("LATERAL");
		words.add("LEADING");
		words.add("LEAVE");
		words.add("LEFT");
		words.add("LIKE");
		words.add("LOCAL");
		words.add("LOCALTIME");
		words.add("LOCALTIMESTAMP");
		words.add("LOOP");
		words.add("MATCH");
		words.add("MEMBER");
		words.add("MERGE");
		words.add("METHOD");
		words.add("MINUTE");
		words.add("MODIFIES");
		words.add("MODULE");
		words.add("MONTH");
		words.add("MULTISET");
		words.add("NATIONAL");
		words.add("NATURAL");
		words.add("NCHAR");
		words.add("NCLOB");
		words.add("NEW");
		words.add("NO");
		words.add("NONE");
		words.add("NOT");
		words.add("NULL");
		words.add("NUMERIC");
		words.add("OF");
		words.add("OLD");
		words.add("ON");
		words.add("ONLY");
		words.add("OPEN");
		words.add("OR");
		words.add("ORDER");
		words.add("OUT");
		words.add("OUTER");
		words.add("OUTPUT");
		words.add("OVER");
		words.add("OVERLAPS");
		words.add("PARAMETER");
		words.add("PARTITION");
		words.add("PRECISION");
		words.add("PREPARE");
		words.add("PRIMARY");
		words.add("PROCEDURE");
		words.add("RANGE");
		words.add("READS");
		words.add("REAL");
		words.add("RECURSIVE");
		words.add("REF");
		words.add("REFERENCES");
		words.add("REFERENCING");
		words.add("RELEASE");
		words.add("REPEAT");
		words.add("RESIGNAL");
		words.add("RESULT");
		words.add("RETURN");
		words.add("RETURNS");
		words.add("REVOKE");
		words.add("RIGHT");
		words.add("ROLLBACK");
		words.add("ROLLUP");
		words.add("ROW");
		words.add("ROWS");
		words.add("SAVEPOINT");
		words.add("SCOPE");
		words.add("SCROLL");
		words.add("SEARCH");
		words.add("SECOND");
		words.add("SELECT");
		words.add("SENSITIVE");
		words.add("SESSION");
		words.add("USER");
		words.add("SET");
		words.add("SIGNAL");
		words.add("SIMILAR");
		words.add("SMALLINT");
		words.add("SOME");
		words.add("SPECIFIC");
		words.add("SPECIFICTYPE");
		words.add("SQL");
		words.add("SQLEXCEPTION");
		words.add("SQLSTATE");
		words.add("SQLWARNING");
		words.add("START");
		words.add("STATIC");
		words.add("SUBMULTISET");
		words.add("SYMMETRIC");
		words.add("SYSTEM");
		words.add("SYSTEM");
		words.add("USER");
		words.add("TABLE");
		words.add("TABLESAMPLE");
		words.add("THEN");
		words.add("TIME");
		words.add("TIMESTAMP");
		words.add("TIMEZONE");
		words.add("HOUR");
		words.add("TIMEZONE");
		words.add("MINUTE");
		words.add("TO");
		words.add("TRAILING");
		words.add("TRANSLATION");
		words.add("TREAT");
		words.add("TRIGGER");
		words.add("UNDO");
		words.add("UNION");
		words.add("UNIQUE");
		words.add("UNKNOWN");
		words.add("UNNEST");
		words.add("UNTIL");
		words.add("UPDATE");
		words.add("USER");
		words.add("USING");
		words.add("VALUE");
		words.add("VALUES");
		words.add("VARCHAR");
		words.add("VARYING");
		words.add("WHEN");
		words.add("WHENEVER");
		words.add("WHERE");
		words.add("WHILE");
		words.add("WINDOW");
		words.add("WITH");
		words.add("WITHIN");
		words.add("WITHOUT");
		words.add("YEAR");
		words.add("FALSE");
		words.add("TRUE");
		return words;
	}
	
	public static Set<String> getWords() {
		return words;
	}
}
