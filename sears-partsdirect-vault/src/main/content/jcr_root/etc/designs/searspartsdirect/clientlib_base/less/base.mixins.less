@import "base.variables.less";
@import "bootstrap/variables-sears.less";

.spanWidth(@v) {
	width: (@fluidGridColumnWidth * @v) + (@fluidGridGutterWidth * (@v - 1));
	*width: (@fluidGridColumnWidth * @v) + (@fluidGridGutterWidth * (@v - 1)) - (.5 / @gridRowWidth * 100 * 1%);
}
.appearance(@v: none) {
	-webkit-appearance: @v;
	-khtml-appearance: @v;
	-moz-appearance: @v;
	-ms-appearance: @v;
	appearance: @v;
}
.userSelect(@v: none) {
	-webkit-touch-callout: @v;
	-webkit-user-select: @v;
	-khtml-user-select: @v;
	-moz-user-select: @v;
	-ms-user-select: @v;
	user-select: @v;
}
.backgroundSize(@v: contain) {
	-webkit-background-size: @v;
	-moz-background-size: @v;
	-ms-background-size: @v;
	-o-background-size: @v;
	background-size: @v;
}
.borderRadius(@v: 0) {
	-webkit-border-radius: @v;
	-moz-border-radius: @v;
	-ms-border-radius: @v;
	-o-border-radius: @v;
	border-radius: @v;
}
.borderTopLeftRadius(@v: 0) {
	-webkit-border-top-left-radius: @v;
	-moz-border-radius-topleft: @v;
	border-top-left-radius: @v;
}
.borderTopRightRadius(@v: 0) {
	-webkit-border-top-right-radius: @v;
	-moz-border-radius-topright: @v;
	border-top-right-radius: @v;
}
.borderBottomLeftRadius(@v: 0) {
	-webkit-border-bottom-left-radius: @v;
	-moz-border-radius-bottomleft: @v;
	border-bottom-left-radius: @v;
}
.borderBottomRightRadius(@v: 0) {
	-webkit-border-bottom-right-radius: @v;
	-moz-border-radius-bottomright: @v;
	border-bottom-right-radius: @v;
}
.opacity(@o: 0.5) {
	-moz-opacity: @o;
	-khtml-opacity: @o;
	-webkit-opacity: @o;
	opacity: @o;
	@oP: @o * 100;
	filter: ~"alpha(opacity=@{oP})";
	@ms-filter: ~"progid:DXImageTransform.Microsoft.Alpha(Opacity=@{oP})";
	-ms-filter: "@{ms-filter}";
}
.verticalGradient(@s: @bodyColor, @e: @secondaryHueDarkest) {
	background: @s;
	background: -moz-linear-gradient(top, @s 0%, @e 100%);
	background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,@s), color-stop(100%,@e));
	background: -webkit-linear-gradient(top, @s 0%,@e 100%);
	background: -o-linear-gradient(top, @s 0%,@e 100%);
	background: -ms-linear-gradient(top, @s 0%,@e 100%);
	background: linear-gradient(to bottom, @s 0%,@e 100%);
	filter: ~"progid:DXImageTransform.Microsoft.gradient(startColorstr='@{s}', endColorstr='@{e}', GradientType=0)";
}
.horizontalGradient(@s: @bodyColor, @e: @secondaryHueDarkest) {
	background: @s;
	background: -moz-linear-gradient(left, @s 0%, @e 100%);
	background: -webkit-gradient(linear, left top, right top, color-stop(0%,@s), color-stop(100%,@e));
	background: -webkit-linear-gradient(left, @s 0%,@e 100%);
	background: -o-linear-gradient(left, @s 0%,@e 100%);
	background: -ms-linear-gradient(left, @s 0%,@e 100%);
	background: linear-gradient(to right, @s 0%,@e 100%);
	filter: ~"progid:DXImageTransform.Microsoft.gradient(startColorstr='@{s}', endColorstr='@{e}', GradientType=1)";
}
.boxShadow(@v: 0 0 0 0 @bodyColor) {
	-webkit-box-shadow: @v;
	-moz-box-shadow: @v;
	-o-box-shadow: @v;
	-ms-box-shadow: @v;
	box-shadow: @v;
}
.textShadow(@v: 0 0 0 @bodyColor) {
	-webkit-text-shadow: @v;
	-moz-text-shadow: @v;
	-o-text-shadow: @v;
	-ms-text-shadow: @v;
	text-shadow: @v;
}
.transition(@v: all 1s ease-out) {
	-webkit-transition: @v;
	-moz-transition: @v;
	-o-transition: @v;
	transition: @v;
}
.boxSizing(@v: border-box) {
	-webkit-box-sizing: @v;
	-moz-box-sizing: @v;
	-ms-box-sizing: @v;
	-o-box-sizing: @v;
	box-sizing: @v;
}
.flipHorizontally() {
	-webkit-transform: scaleX(-1);
	-moz-transform: scaleX(-1);
	-o-transform: scaleX(-1);
	transform: scaleX(-1);
	filter: FlipH;
	-ms-filter: "FlipH";
}
.flipVertically() {
	-webkit-transform: scaleY(-1);
	-moz-transform: scaleY(-1);
	-o-transform: scaleY(-1);
	transform: scaleY(-1);
	filter: FlipV;
	-ms-filter: "FlipV";
}